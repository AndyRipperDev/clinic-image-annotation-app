{"version":3,"file":"annotorious-selector-pack.js","mappings":"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","sources":["webpack://Annotorious.SelectorPack/webpack/universalModuleDefinition","webpack://Annotorious.SelectorPack/./node_modules/fast-deep-equal/index.js","webpack://Annotorious.SelectorPack/./node_modules/tiny-emitter/index.js","webpack://Annotorious.SelectorPack/webpack/bootstrap","webpack://Annotorious.SelectorPack/webpack/runtime/compat get default export","webpack://Annotorious.SelectorPack/webpack/runtime/define property getters","webpack://Annotorious.SelectorPack/webpack/runtime/hasOwnProperty shorthand","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/rng.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/SVG.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/regex.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/validate.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/v4.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/WebAnnotation.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/Selection.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/Tool.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/Touch.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/EditableShape.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/selectors/EmbeddedSVG.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/Formatting.js","webpack://Annotorious.SelectorPack/./src/pointcross/EditablePointcross.js","webpack://Annotorious.SelectorPack/./src/pointcross/PointcrossSelection.js","webpack://Annotorious.SelectorPack/./src/pointcross/PointcrossTool.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/selectors/RectFragment.js","webpack://Annotorious.SelectorPack/./src/point/Point.js","webpack://Annotorious.SelectorPack/./src/point/EditablePoint.js","webpack://Annotorious.SelectorPack/./src/point/PointTool.js","webpack://Annotorious.SelectorPack/./src/circle/Circle.js","webpack://Annotorious.SelectorPack/./src/circle/CircleMask.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircle.js","webpack://Annotorious.SelectorPack/./src/circle/EditableCircle.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircleTool.js","webpack://Annotorious.SelectorPack/./src/ellipse/Ellipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EllipseMask.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EditableEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipseTool.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/EditableFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehandTool.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/polygon/PolygonMask.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/EditableMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygonTool.js","webpack://Annotorious.SelectorPack/./src/line/LineMask.js","webpack://Annotorious.SelectorPack/./src/line/RubberbandLine.js","webpack://Annotorious.SelectorPack/./src/line/EditableLine.js","webpack://Annotorious.SelectorPack/./src/line/RubberbandLineTool.js","webpack://Annotorious.SelectorPack/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Annotorious\"] = factory();\n\telse\n\t\troot[\"Annotorious\"] = root[\"Annotorious\"] || {}, root[\"Annotorious\"][\"SelectorPack\"] = factory();\n})(self, () => {\nreturn ","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nconst getClassNames = el => {\n  const attr = el.getAttribute('class');\n  return attr ? new Set(attr.split(' ')) : new Set();\n}\n\n// IE11 doesn't support adding/removing classes to SVG elements except \n// via .setAttribute\nexport const addClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.add(className);\n  el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const removeClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.delete(className);\n\n  if (classNames.size === 0)\n    el.removeAttribute('class');\n  else\n    el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const hasClass = (el, className) =>\n  getClassNames(el).has(className);","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\nexport default class WebAnnotation {\n\n  constructor(annotation, opts) {\n    this.underlying = annotation;\n    this.opts = opts;\n  }\n\n  /** For convenience - creates an empty web annotation **/\n  static create = args => {\n    const stub = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`,\n      'body': []\n    };\n\n    return new WebAnnotation({ ...stub, ...args });\n  }\n\n  /** Creates a copy of this annotation **/\n  clone = (opt_props, opt_opts) => {\n    return new WebAnnotation({ ...this.underlying, ...opt_props}, { ...this.opts, ...opt_opts });\n  }\n\n  /** An equality check based on the underlying object **/\n  isEqual(other) {\n    if (other?.type !== 'Annotation') {\n      return false;\n    } else if (this.underlying === other.underlying) {\n      return true;\n    } else if (!this.underlying.id || !other.underlying.id) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n\n  get readOnly() {\n    return this.opts?.readOnly;\n  }\n\n  /*************************************/\n  /* Getters to forward properties of  */\n  /* the underlying annotation         */\n  /*************************************/\n\n  get id() {\n    return this.underlying.id;\n  }\n\n  get context() {\n    return this.underlying['@context'];\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get motivation() {\n    return this.underlying.motivation;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  /** Same as .body, but guaranteed to return an array **/\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  /** Only bodies are meant to be mutated by the application **/\n  set bodies(bodies) {\n    this.underlying.body = bodies;\n  }\n\n  /** Same as .target, but guaranteed to return an array **/\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /*****************************************/\n  /* Various access helpers and shorthands */\n  /*****************************************/\n\n  /** Selector of the given type **/\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector')?.exact;\n  }\n\n  /** Shorthand for the 'start' field of the TextPositionSelector **/\n  get start() {\n    return this.selector('TextPositionSelector')?.start;\n  }\n\n  /** Shorthand for the 'end' field of the TextPositionSelector **/\n  get end() {\n    return this.selector('TextPositionSelector')?.end;\n  }\n\n}\n","import WebAnnotation from './WebAnnotation';\nimport { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\n/**\n * An \"annotation in draft mode\". Really the same\n * data structure, but as a separate class so we can\n * tell things apart properly.\n */\nexport default class Selection {\n\n  constructor(target, body) {\n    this.underlying = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      type: 'Selection',\n      body: body || [],\n      target\n    }\n  }\n\n  /** Creates a copy of this selection **/\n  clone = opt_props => {\n    // Deep-clone\n    const cloned = new Selection();\n    cloned.underlying = JSON.parse(JSON.stringify(this.underlying));\n\n    if (opt_props)\n      cloned.underlying = { ...cloned.underlying, ...opt_props };\n\n    return cloned;\n  }\n\n  get context() {\n    return this.underlying['@context'];\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /** For consistency with WebAnnotation **/\n  isEqual(other) {\n    if (!other) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector')?.exact;\n  }\n\n  /*******************************************/\n  /* Selection-specific properties & methods */\n  /*******************************************/\n\n  get isSelection() {\n    return true;\n  }\n\n  toAnnotation = () => {\n    const a = Object.assign({}, this.underlying, {\n      'type': 'Annotation',\n      'id': `#${uuid()}`\n    });\n\n    return new WebAnnotation(a);\n  }\n\n}\n","import EventEmitter from 'tiny-emitter';\nimport { isTouchDevice } from '../util/Touch';\nimport { SVG_NAMESPACE } from '../util/SVG';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nconst isTouch = isTouchDevice();\n\n/**\n * A commmon base class for Tools and EditableShapes\n */\nexport class ToolLike extends EventEmitter {\n\n  constructor(g, config, env) {\n    super();\n\n    this.svg = g.closest('svg');\n\n    this.g = g;\n    this.config = config;\n    this.env = env;\n\n    // Default image scale\n    this.scale = 1;\n\n    // Bit of a hack. If we are dealing with a 'real' image, we enable\n    // reponsive mode. OpenSeadragon handles scaling in a different way,\n    // so we don't need responsive mode.\n    const { image } = env;\n    if (image instanceof Element || image instanceof HTMLDocument)\n      this.enableResponsive();\n  }\n\n  /**\n   * Implementations MAY extend this (calling super),\n   * to destroy SVG elements, mask, etc.\n   */\n  destroy() {\n    if (this.resizeObserver)\n      this.resizeObserver.disconnect();\n\n    this.resizeObserver = null;\n  }\n\n  enableResponsive = () => {\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        const svgBounds = this.svg.getBoundingClientRect();\n        const { width, height } = this.svg.viewBox.baseVal;\n\n        this.scale = Math.max(\n          width / svgBounds.width,\n          height / svgBounds.height\n        );\n\n        if (this.onScaleChanged)\n          this.onScaleChanged(this.scale);\n      });\n\n      this.resizeObserver.observe(this.svg.parentNode);\n    }\n  }\n\n  getSVGPoint = evt => {\n    const pt = this.svg.createSVGPoint();\n\n    if (isTouch) {\n      const bbox = this.svg.getBoundingClientRect();\n\n      const x = evt.clientX - bbox.x;\n      const y = evt.clientY - bbox.y;\n\n      const { left, top } = this.svg.getBoundingClientRect();\n      pt.x = x + left;\n      pt.y = y + top;\n\n      return pt.matrixTransform(this.g.getScreenCTM().inverse());\n    } else {\n      pt.x = evt.offsetX;\n      pt.y = evt.offsetY;\n\n      return pt.matrixTransform(this.g.getCTM().inverse());\n    }\n  }\n\n  /*********************************/\n  /*  Helpers for drawing handles  */\n  /*********************************/\n\n  drawHandle = (x, y) => {\n    const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    containerGroup.setAttribute('class', 'a9s-handle');\n\n    const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    const drawCircle = r => {\n      const c = document.createElementNS(SVG_NAMESPACE, 'circle');\n      c.setAttribute('cx', x);\n      c.setAttribute('cy', y);\n      c.setAttribute('r', r);\n      c.setAttribute('transform-origin', `${x} ${y}`);\n      return c;\n    }\n\n    const radius = this.config.handleRadius || 6;\n\n    const inner = drawCircle(radius);\n    inner.setAttribute('class', 'a9s-handle-inner')\n\n    const outer = drawCircle(radius + 1);\n    outer.setAttribute('class', 'a9s-handle-outer')\n\n    group.appendChild(outer);\n    group.appendChild(inner);\n\n    containerGroup.appendChild(group);\n    return containerGroup;\n  }\n\n  setHandleXY = (handle, x, y) => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    inner.setAttribute('cx', x);\n    inner.setAttribute('cy', y);\n    inner.setAttribute('transform-origin', `${x} ${y}`);\n\n    const outer = handle.querySelector('.a9s-handle-outer');\n    outer.setAttribute('cx', x);\n    outer.setAttribute('cy', y);\n    outer.setAttribute('transform-origin', `${x} ${y}`);\n  }\n\n  getHandleXY = handle => {\n    const outer = handle.querySelector('.a9s-handle-outer');\n    return {\n      x: parseFloat(outer.getAttribute('cx')),\n      y: parseFloat(outer.getAttribute('cy'))\n    }\n  }\n\n  scaleHandle = handle => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    const outer = handle.querySelector('.a9s-handle-outer');\n\n    const radius = this.scale * (this.config.handleRadius || 6);\n\n    inner.setAttribute('r', radius);\n    outer.setAttribute('r', radius);\n  }\n\n}\n\n/**\n * Base class that adds some convenience stuff for tool plugins.\n */\nexport default class Tool extends ToolLike {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    // We'll keep a flag set to false until\n    // the user has started moving, so we can\n    // fire the startSelection event\n    this.started = false;\n  }\n\n  attachListeners = ({ mouseMove, mouseUp, dblClick }) => {\n    // Handle SVG conversion on behalf of tool implementations\n    if (mouseMove) {\n      this.mouseMove = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n\n        if (!this.started) {\n          this.emit('startSelection', { x, y });\n          this.started = true;\n        }\n\n        mouseMove(x, y, evt);\n      }\n\n      // Mouse move goes on SVG element\n      this.svg.addEventListener('mousemove', this.mouseMove);\n    }\n\n    if (mouseUp) {\n      this.mouseUp = evt => {\n        if (evt.button !== 0) return;  // left click\n        const { x , y } = this.getSVGPoint(evt);\n        mouseUp(x, y, evt);\n      }\n\n      // Mouse up goes on doc, so we capture events outside, too\n      document.addEventListener('mouseup', this.mouseUp);\n    }\n\n    if (dblClick) {\n      this.dblClick = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n        dblClick(x, y, evt);\n      }\n\n      document.addEventListener('dblclick', this.dblClick);\n    }\n\n  }\n\n  detachListeners = () => {\n    if (this.mouseMove)\n      this.svg.removeEventListener('mousemove', this.mouseMove);\n\n    if (this.mouseUp)\n      document.removeEventListener('mouseup', this.mouseUp);\n\n    if (this.dblClick)\n      document.removeEventListener('dblclick', this.dblClick);\n  }\n\n  /**\n   * If startOnSingleClick is true, the tool starts on single click\n   * as well as drag. If false, starting strictly requires drag!\n   */\n  start = (evt, startOnSingleClick) => {\n    // Handle SVG conversion on behalf of tool implementations\n    const { x, y } = this.getSVGPoint(evt);\n    \n    // Constrain the initial coordinates (x, y) to be within the image bounds\n    const { naturalWidth, naturalHeight } = this.env.image;\n    const startX = x < 0 ? 0 : (x > naturalWidth ? naturalWidth : x);\n    const startY = y < 0 ? 0 : (y > naturalHeight ? naturalHeight : y);\n    \n    this.startDrawing(startX, startY, startOnSingleClick, evt);\n  }\n\n  /**\n   * Tool implementations MUST override these\n   */\n\n  get isDrawing() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  startDrawing = evt => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  createEditableShape = (annotation, formatters) => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n\n// In addition, Tool implementations need to implement the following static methods\n\n// Tool.identifier = '...'\n\nTool.supports = annotation => {\n  throw new Error(IMPLEMENTATION_MISSING);\n}\n\n// Just some convenience shortcuts to client-core, for quicker\n// importing in plugins. (In a way, the intention is to make the\n// Tool class serve as a kind of mini-SDK).\nexport { default as Selection } from '@recogito/recogito-client-core/src/Selection';\nexport { default as WebAnnotation } from '@recogito/recogito-client-core/src/WebAnnotation';\n","const SIM_EVENTS = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup'\n}\n\nexport const isTouchDevice = () =>\n  'ontouchstart' in window ||\n    navigator.maxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0;\n\nexport const enableTouchTranslation = el => {\n\n  let pressAndHoldTrigger = null;\n\n  const simulateEvent = (type, e) => new MouseEvent(type, {\n    screenX: e.screenX,\n    screenY: e.screenY,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    bubbles: true\n  });\n\n  const touchHandler = evt => {\n    const touch = evt.changedTouches[0];\n    const simulatedEvent = simulateEvent(SIM_EVENTS[evt.type], touch);\n\n    touch.target.dispatchEvent(simulatedEvent);\n    evt.preventDefault();\n\n    if (evt.type === 'touchstart' || evt.type === 'touchmove') {\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n\n      pressAndHoldTrigger = setTimeout(() => {\n        const simulatedEvent = simulateEvent('dblclick', touch);\n        touch.target.dispatchEvent(simulatedEvent);\n      }, 800);\n    }\n\n    if (evt.type === 'touchend')\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n  }\n\n  el.addEventListener('touchstart', touchHandler, true);\n  el.addEventListener('touchmove', touchHandler, true);\n  el.addEventListener('touchend', touchHandler, true);\n  el.addEventListener('touchcancel', touchHandler, true);\n\n}","import { ToolLike } from './Tool';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nexport default class EditableShape extends ToolLike {\n\n  constructor(annotation, g, config, env) {\n    super(g, config, env);\n\n    this.annotation = annotation;\n  }\n  \n  /**\n   * Implementations MUST override this method!\n   * \n   * Must return the 'g' element with the a9s-annotation class.\n   */\n  get element() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  /**\n   * Implementations MUST override this method!\n   * \n   * The annotation argument MUST be used to update\n   * the current state of the shape. It MUST NOT\n   * be stored as 'this.annotation'! 'this.annotation'\n   * MUST remain the original annotation at the time\n   * this EditableShape was created, because we will\n   * need it again in case the user cancels editing.\n   * \n   * Thinking of it in React terms, 'this.annotation'\n   * has the same purpose as props.annotation, whereas\n   * this method affects state.\n   */\n  updateState = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n","import { SVG_NAMESPACE } from '../util/SVG';\nimport { polygonArea, polygonInPolygon, svgPathToPolygons } from '../util/Geom2D';\n\n/** Helper that forces an un-namespaced node to SVG **/\nconst insertSVGNamespace = originalDoc => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n\nconst sanitize = doc => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = el => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n  Array.from(scripts).reverse().forEach(el =>\n    el.parentNode.removeChild(el));\n\n  // Remove on... attributes\n  cleanEl(doc);\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\nexport const svgFragmentToShape = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector) {\n    const parser = new DOMParser();\n\n    // Parse the XML document, assuming SVG\n    const { value } = selector;\n    const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n    // SVG needs a namespace declaration - check if it's set or insert if not\n    const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n    const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n    if (isPrefixDeclared || isDefaultNamespaceSVG) {\n      return sanitize(doc).firstChild;\n    } else {\n      return sanitize(insertSVGNamespace(doc)).firstChild;\n    }\n  }\n}\n\nexport const drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n\nexport const toSVGTarget = (shape, image) => {\n  const inner = shape.querySelector('.a9s-inner').cloneNode(true);\n  inner.removeAttribute('class');\n  inner.removeAttribute('xmlns');\n\n  let serialized = inner.outerHTML || new XMLSerializer().serializeToString(inner);\n  serialized = serialized.replace(` xmlns=\"${SVG_NAMESPACE}\"`, '');\n\n  return {\n    source: image?.src,\n    selector: {\n      type: \"SvgSelector\",\n      value: `<svg>${serialized}</svg>`\n    }\n  }\n}\n\nexport const svgArea = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  const nodeName = shape.nodeName.toLowerCase();\n\n  if (nodeName === 'polygon') \n    return svgPolygonArea(shape);\n  else if (nodeName === 'circle')\n    return svgCircleArea(shape);\n  else if (nodeName === 'ellipse')\n    return svgEllipseArea(shape);\n  else if (nodeName == 'path')\n    return svgPathArea(shape);\n  else if (nodeName == 'line')\n    return 0;\n  else\n    throw `Unsupported SVG shape type: ${nodeName}`;\n}\n\nconst svgPolygonArea = polygon => {\n  const points = polygon.getAttribute('points')\n    .trim()\n    .split(' ') // Split x/y tuples\n    .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n\n  return polygonArea(points)\n}\n\nconst svgCircleArea = circle => {\n  const r = circle.getAttribute('r');\n  return r * r * Math.PI;\n}\n\nconst svgEllipseArea = ellipse => {\n  const rx = ellipse.getAttribute('rx');\n  const ry = ellipse.getAttribute('ry');\n  return rx * ry * Math.PI;\n}\n\nconst svgPathArea = path => {\n  const polygons = svgPathToPolygons(path);\n\n  if (polygons.length == 1) {\n    return polygonArea(polygons[0]);\n  } else {\n    // Helper to check if a polygon is a hole\n    const isHole = p => polygons.find(other => {\n      if (p !== other)\n        return polygonInPolygon(p, other); \n    })\n\n    let area = 0\n\n    for (let poly of polygons) {\n      if (isHole(poly))\n        area -= polygonArea(poly);\n      else \n        area += polygonArea(poly);\n    }\n\n    return area;\n  }\n}","import { addClass, SVG_NAMESPACE } from './SVG';\n\nconst isFirefox = /firefox/i.test(navigator.userAgent);\n\nconst formatSvgEl = (svgEl, x, y, w, h) => {\n  svgEl.setAttribute('width', w);\n  svgEl.setAttribute('height', h);\n\n  // Argh - Firefox produces broken SVG bounds for nested SVG\n  if (isFirefox) {\n    svgEl.setAttribute('x', 0);\n    svgEl.setAttribute('y', 0);\n    svgEl.setAttribute('transform', `translate(${x}, ${y})`);  \n  } else {\n    svgEl.setAttribute('x', x);\n    svgEl.setAttribute('y', y);\n  }\n}\n\nconst appendFormatterEl = (formatterEl, shape) => {\n  const { x, y, width, height } = shape.getBBox();\n\n  const svgEl = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svgEl.setAttribute('class', 'a9s-formatter-el');\n\n  formatSvgEl(svgEl, x, y, width, height);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.appendChild(formatterEl);y\n\n  svgEl.appendChild(g);\n  \n  shape.append(svgEl);\n}\n\n/**\n * A formatter is a user-defined function that takes an annotation as input,\n * and returns either a string, or an object. If a string is returned, this\n * will be appended to the annotation element CSS class list. Otherwise, the\n * object can have the following properties: \n * \n * - 'className' added to the CSS class list\n * - 'data-*' added as data attributes\n * - 'style' a list of CSS styles (in the form of a string) \n */\nexport const format = (shape, annotation, formatters) => {\n  // The formatter can be undefined\n  if (!formatters)\n    return shape;\n\n  // Merge outputs from all formatter functions into one object\n  const format = formatters.reduce((merged, fn) => {\n    const format = fn(annotation);\n\n    if (!format)\n      return merged;\n\n    if (typeof format === 'string' || format instanceof String) {\n      merged.className = merged.className ? `${merged.className} ${format}` : format; \n    } else if (format.nodeType === Node.ELEMENT_NODE) {\n      merged.elements = merged.elements ? [...merged.elements, format] : [format];\n    } else {\n      const { className, style, element } = format;\n\n      if (className)\n        merged.className = merged.className ? `${merged.className} ${className}` : className;\n\n      if (style)\n        merged.style = merged.style ? `${merged.style} ${style}` : style;\n\n      if (element)\n        merged.elements = merged.elements ? [...merged.elements, element] : [element];\n    }\n\n    // Copy data attributes\n    for (const key in format) {\n      if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n        merged[key] = format[key];\n      }\n    }\n\n    return merged;\n  }, {});\n\n  const { className, style, elements } = format;\n\n  if (className)\n    addClass(shape, className);\n\n  if (style) {\n    const outer = shape.querySelector('.a9s-outer');\n    const inner = shape.querySelector('.a9s-inner');\n\n    if (outer && inner) {\n      outer.setAttribute('style', 'display:none');\n      inner.setAttribute('style', style);\n    } else {\n      shape.setAttribute('style', style);\n    }\n  }\n\n  if (elements)\n    elements.forEach(el => appendFormatterEl(el, shape));\n\n  for (const key in format) {\n    if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n      shape.setAttribute(key, format[key]);\n    }\n  }\n}\n\nexport const setFormatterElSize = (group, x, y, w, h) => {\n  const formatterEl = group.querySelector('.a9s-formatter-el');\n  if (formatterEl)\n    formatSvgEl(formatterEl, x, y, w, h);\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { parseRectFragment } from '@recogito/annotorious/src/selectors/RectFragment';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { toFragment } from './Pointcross';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n\n// export default class EditablePointcross extends EditableShape {\n\n//   drawPointcross = (x, y) => {\n//     const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n//     containerGroup.setAttribute('class', 'a9s-handle');\n\n//     const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n//     const drawLineHorizontal = size => {\n//       const xStart = x - size;\n//       const xEnd = x + size;\n      \n//       const line = document.createElementNS(SVG_NAMESPACE, 'line');\n//       line.setAttribute('x1', xStart);\n//       line.setAttribute('y1', y);\n//       line.setAttribute('x2', xEnd);\n//       line.setAttribute('y2', y);\n//       line.setAttribute('stroke-width', 4);\n//       line.setAttribute('transform-origin', `${x} ${y}`);\n//       return line;\n//     }\n\n//     const drawLineVertical = size => {\n//       const yStart = y - size;\n//       const yEnd = y + size;\n      \n//       const line = document.createElementNS(SVG_NAMESPACE, 'line');\n//       line.setAttribute('x1', x);\n//       line.setAttribute('y1', yStart);\n//       line.setAttribute('x2', x);\n//       line.setAttribute('y2', yEnd);\n//       line.setAttribute('stroke-width', 4);\n//       line.setAttribute('transform-origin', `${x} ${y}`);\n//       return line;\n//     }\n\n//     // const radius = this.config.handleRadius || 6;\n\n//     const inner = drawLineHorizontal(25);\n//     inner.setAttribute('class', 'a9s-handle-inner')\n\n//     const outer = drawLineVertical(25);\n//     outer.setAttribute('class', 'a9s-handle-outer')\n\n//     group.appendChild(outer);\n//     group.appendChild(inner);\n\n//     containerGroup.appendChild(group);\n//     return containerGroup;\n//   }\n\n//   // setPointcrossXY = (pointcross, x, y) => {\n//   //   const inners = pointcross.querySelectorAll('.a9s-inner');\n\n//   //   for (let i = 0; i < inners.length; i++) {\n//   //    if (i===0) {\n//   //     inners[i].setAttribute('x1', x - 25);\n//   //     inners[i].setAttribute('y1', y);\n//   //     inners[i].setAttribute('x2', x + 25);\n//   //     inners[i].setAttribute('y2', y);\n//   //     inners[i].setAttribute('center-x', x);\n//   //     inners[i].setAttribute('center-y', y);\n//   //     inners[i].setAttribute('transform-origin', `${x} ${y}`);\n//   //    } else {\n//   //     inners[i].setAttribute('x1', x);\n//   //     inners[i].setAttribute('y1', y - 25);\n//   //     inners[i].setAttribute('x2', x);\n//   //     inners[i].setAttribute('y2', y + 25);\n//   //     inners[i].setAttribute('center-x', x);\n//   //     inners[i].setAttribute('center-y', y);\n//   //     inners[i].setAttribute('transform-origin', `${x} ${y}`);\n//   //    }\n//   //   }\n//   // }\n\n//   setPointcrossXY = (pointcross, x, y) => {\n//     const inner = pointcross.querySelector('.a9s-inner');\n    \n//     const lineHorizontal = inner.querySelector('.a9s-pointcross-h');\n//     lineHorizontal.setAttribute('x1', x - 25);\n//     lineHorizontal.setAttribute('y1', y);\n//     lineHorizontal.setAttribute('x2', x + 25);\n//     lineHorizontal.setAttribute('y2', y);\n//     lineHorizontal.setAttribute('center-x', x);\n//     lineHorizontal.setAttribute('center-y', y);\n//     lineHorizontal.setAttribute('transform-origin', `${x} ${y}`);\n\n//     const lineVertical = inner.querySelector('.a9s-pointcross-v');\n//     lineVertical.setAttribute('x1', x);\n//     lineVertical.setAttribute('y1', y - 25);\n//     lineVertical.setAttribute('x2', x);\n//     lineVertical.setAttribute('y2', y + 25);\n//     lineVertical.setAttribute('center-x', x);\n//     lineVertical.setAttribute('center-y', y);\n//     lineVertical.setAttribute('transform-origin', `${x} ${y}`);\n\n//     const outer = handle.querySelector('.a9s-outer');\n\n//     const lineHorizontalOut = outer.querySelector('.a9s-pointcross-h');\n//     lineHorizontalOut.setAttribute('x1', x - 25);\n//     lineHorizontalOut.setAttribute('y1', y);\n//     lineHorizontalOut.setAttribute('x2', x + 25);\n//     lineHorizontalOut.setAttribute('y2', y);\n//     lineHorizontalOut.setAttribute('center-x', x);\n//     lineHorizontalOut.setAttribute('center-y', y);\n//     lineHorizontalOut.setAttribute('transform-origin', `${x} ${y}`);\n\n//     const lineVerticalOut = outer.querySelector('.a9s-pointcross-v');\n//     lineVerticalOut.setAttribute('x1', x);\n//     lineVerticalOut.setAttribute('y1', y - 25);\n//     lineVerticalOut.setAttribute('x2', x);\n//     lineVerticalOut.setAttribute('y2', y + 25);\n//     lineVerticalOut.setAttribute('center-x', x);\n//     lineVerticalOut.setAttribute('center-y', y);\n//     lineVerticalOut.setAttribute('transform-origin', `${x} ${y}`);\n//   }\n\n//   constructor(annotation, g, config, env) {\n//     // super(annotation, g, config, env);\n\n//     // console.log(annotation)\n\n//     // console.log('hey')\n//     // this.svg.addEventListener('mousemove', this.onMouseMove);\n//     // this.svg.addEventListener('mouseup', this.onMouseUp);\n\n//     // const { x, y } = parseRectFragment(annotation, env.image);\n\n//     // console.log('hey2')\n//     // this.container = document.createElementNS(SVG_NAMESPACE, 'g');\n\n//     // console.log('hey3')\n//     // this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n//     // this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n\n//     // console.log('hey4')\n//     // this.pointcross = this.drawPointcross(x, y);\n//     // this.pointcross.addEventListener('mousedown', this.onGrab);\n    \n//     // console.log('hey5')\n//     // this.elementGroup.appendChild(this.pointcross);\n\n//     // console.log('hey6')\n//     // this.container.appendChild(this.elementGroup);\n//     // g.appendChild(this.container);\n\n//     // console.log('hey7')\n//     // // true if te mouse has grabbed the point\n//     // this.isGrabbed = false;\n\n\n\n\n\n\n\n//     super(annotation, g, config, env);\n\n//     console.log(annotation)\n\n//     console.log('hey')\n//     this.svg.addEventListener('mousemove', this.onMouseMove);\n//     this.svg.addEventListener('mouseup', this.onMouseUp);\n\n//     // this.container = document.createElementNS(SVG_NAMESPACE, 'g');\n\n//     this.shape = drawEmbeddedSVG(annotation);\n//     this.shape.querySelector('.a9s-inner')\n//       .addEventListener('mousedown', this.onGrab(this.shape));\n\n      \n//     // this.innerShapes = this.shape.querySelectorAll('.a9s-inner');\n//     //   for (let i = 0; i < this.innerShapes.length; i++) {\n//     //     this.innerShapes[i].addEventListener('mousedown', this.onGrab(this.shape));\n//     // }\n\n//       this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n//       this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n//       this.elementGroup.setAttribute('data-id', annotation.id);\n//       this.elementGroup.appendChild(this.shape);\n  \n//       // this.container.appendChild(this.elementGroup);\n//       g.appendChild(this.elementGroup);\n  \n//       format(this.shape, annotation, config.formatters);\n  \n//       this.isGrabbed = false;\n//   }\n\n//   // onScaleChanged = () => \n//   //   this.scaleHandle(this.pointcross);\n\n//   get element() {\n//     return this.elementGroup;\n//   }\n\n//   onGrab = () => {\n//     this.isGrabbed = true;\n//   }\n\n//   onMouseMove = evt => {\n//     if (evt.button !== 0) return;  // left click\n\n//     if (this.isGrabbed) {\n//       const {x, y} = this.getSVGPoint(evt);\n\n//       // this.setPointcrossXY(this.pointcross, x, y);\n//       this.setPointcrossXY(this.shape, x, y);\n\n//       // const target = toFragment(x, y, this.env.image, this.config.fragmentUnit);\n      \n//       this.emit('update', toSVGTarget(this.shape, this.env.image));\n//       // this.emit('update', target);\n//     }\n//   }\n\n//   onMouseUp = () => {\n//     this.isGrabbed = false;\n//   }\n\n//   updateState = annotation => {\n//     // const { x, y } = parseRectFragment(annotation, this.env.image);\n//     // this.setPointcrossXY(this.pointcross, x, y);\n//   }\n\n//   destroy() {\n//     this.svg.removeEventListener('mousemove', this.onMouseMove);\n//     this.svg.removeEventListener('mouseup', this.onMouseUp);\n\n//     this.elementGroup.parentNode.removeChild(this.elementGroup);\n//     super.destroy();\n//   }\n\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst getPoint = shape => {\n  console.log('8');\n  const svgPath = shape.getAttribute('d');\n\n  const regex = /M(\\S+),(\\S+)/;\n  const match = svgPath.match(regex);\n  \n  if (match) {\n    const x = parseFloat(match[1]);\n    const y = parseFloat(match[2]);\n\n    console.log(`x: ${x}, y: ${y}`)\n    \n    return [x, y + 25]\n  } \n\n  console.log('rip')\n  return [0, 0]\n}\n\nconst getBBox = shape => {\n  console.log('7');\n  return shape.querySelector('.a9s-inner').getBBox();\n}\n\n/**\n * An editable freehand drawing.\n */\nexport default class EditablePointcross extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    \n    console.log('6');\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoint = (point) => {\n    console.log('5');\n    const pointX = parseFloat(point[0]);\n    const pointY = parseFloat(point[1]);\n    const startX = pointX - 25;\n    const endX = pointX + 25;\n    const startY = pointY - 25;\n    const endY = pointY + 25;\n\n    const str = 'M' + pointX + ',' + startY + ' ' + 'V' + endY + ' ' + 'M' + startX + ',' + pointY + ' ' + 'H' + endX;\n\n\n    // // Not using .toFixed(1) because that will ALWAYS\n    // // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    // const round = num => Math.round(10 * num) / 10;\n\n    // var str = points.map(pt => `L${round(pt.x)} ${round(pt.y)}`).join(' ');\n    // str = 'M' + str.substring(1);\n\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    const { x, y, width, height } = outer.getBBox();\n\n    // TODO optional: mask to dim the outside area\n    // this.mask.redraw();\n\n    // TODO optional: handles to stretch the shape\n/*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n\n    this.setHandleXY(topleft, x, y);\n    this.setHandleXY(topright, x + width, y);\n    this.setHandleXY(bottomright, x + width, y + height);\n    this.setHandleXY(bottomleft, x, y + height);*/\n\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    console.log('grabbed1');\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n\n\n  onMouseMove = evt => {\n    console.log('4');\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n      console.log('11');\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      const { x, y, width, height } = getBBox(this.shape);\n\n      if (this.grabbedElem === this.shape) {\n\n        console.log('grabbed');\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const inner = this.shape.querySelector('.a9s-inner');\n        let updatedPoint = getPoint(inner);\n        updatedPoint[0] = updatedPoint[0] + dx\n        updatedPoint[1] = updatedPoint[1] + dy\n\n\n        this.grabbedAt = pos;\n\n        this.setPoint(updatedPoint);\n        console.log(updatedPoint)\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n      // TODO optional: handles to stretch the shape\n      /* else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }*/\n    }\n  }\n\n  onMouseUp = evt => {\n    console.log('2');\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    console.log('1');\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    console.log('uuuuupdated1');\n    const point = getPoint(svgFragmentToShape(annotation));\n    \n    console.log('uuuuupdated');\n    this.setPoint(point);\n  }\n\n  destroy = () => {\n    console.log('3');\n    \n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n\n\n\n\n","import { Selection } from '@recogito/annotorious/src/tools/Tool';\r\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\r\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\r\n\r\n\r\n// /**\r\n//  * A 'rubberband' selection tool for creating Line drawing by\r\n//  * clicking and dragging.\r\n//  */\r\n// export default class PointcrossSelection {\r\n// //     drawLineHorizontal = (x, y, size, strokeWidth) => {\r\n// //         const xStart = x - size;\r\n// //         const xEnd = x + size;\r\n        \r\n// //         const line = document.createElementNS(SVG_NAMESPACE, 'line');\r\n// //         line.setAttribute('x1', xStart);\r\n// //         line.setAttribute('y1', y);\r\n// //         line.setAttribute('x2', xEnd);\r\n// //         line.setAttribute('y2', y);\r\n// //         line.setAttribute('transform-origin', `${x} ${y}`);\r\n// //         return line;\r\n// //       }\r\n\r\n// //       drawLineVertical = (x, y, size, strokeWidth) => {\r\n// //         const yStart = y - size;\r\n// //         const yEnd = y + size;\r\n        \r\n// //         const line = document.createElementNS(SVG_NAMESPACE, 'line');\r\n// //         line.setAttribute('x1', x);\r\n// //         line.setAttribute('y1', yStart);\r\n// //         line.setAttribute('x2', x);\r\n// //         line.setAttribute('y2', yEnd);\r\n// //         line.setAttribute('transform-origin', `${x} ${y}`);\r\n// //         return line;\r\n// //       }\r\n\r\n// //   constructor(x, y, g, env) {\r\n// //     this.env = env;\r\n\r\n// //     this.group = document.createElementNS(SVG_NAMESPACE, 'g');\r\n    \r\n// //     this.cross = document.createElementNS(SVG_NAMESPACE, 'g');\r\n// //     this.cross.setAttribute('class', 'a9s-selection');\r\n\r\n// //     const inner = this.drawLineHorizontal(x, y, 50, 4);\r\n// //     inner.setAttribute('class', 'a9s-inner');\r\n\r\n// //     const outer = this.drawLineVertical(x, y, 50, 4);\r\n// //     outer.setAttribute('class', 'a9s-inner');\r\n\r\n// //     this.cross.appendChild(outer);\r\n// //     this.cross.appendChild(inner);\r\n\r\n// //     this.group.appendChild(this.cross);\r\n\r\n// //     g.appendChild(this.group);\r\n// //   }\r\n\r\n\r\n\r\n//   drawLineHorizontal = (x, y, size, strokeWidth) => {\r\n//     const xStart = x - size;\r\n//     const xEnd = x + size;\r\n    \r\n//     const line = document.createElementNS(SVG_NAMESPACE, 'line');\r\n//     line.setAttribute('x1', xStart);\r\n//     line.setAttribute('y1', y);\r\n//     line.setAttribute('x2', xEnd);\r\n//     line.setAttribute('y2', y);\r\n//     line.setAttribute('stroke-width', strokeWidth);\r\n//     line.setAttribute('center-x', x);\r\n//     line.setAttribute('center-y', y);\r\n//     line.setAttribute('transform-origin', `${x} ${y}`);\r\n//     return line;\r\n//   }\r\n\r\n//   drawLineVertical = (x, y, size, strokeWidth) => {\r\n//     const yStart = y - size;\r\n//     const yEnd = y + size;\r\n    \r\n//     const line = document.createElementNS(SVG_NAMESPACE, 'line');\r\n//     line.setAttribute('x1', x);\r\n//     line.setAttribute('y1', yStart);\r\n//     line.setAttribute('x2', x);\r\n//     line.setAttribute('y2', yEnd);\r\n//     line.setAttribute('stroke-width', strokeWidth);\r\n//     line.setAttribute('center-x', x);\r\n//     line.setAttribute('center-y', y);\r\n//     line.setAttribute('transform-origin', `${x} ${y}`);\r\n//     return line;\r\n//   }\r\n\r\n// constructor(x, y, g, env) {\r\n// this.env = env;\r\n\r\n// this.group = document.createElementNS(SVG_NAMESPACE, 'g');\r\n// this.group.setAttribute('class', 'a9s-selection');\r\n\r\n// // this.cross = document.createElementNS(SVG_NAMESPACE, 'g');\r\n\r\n// const inner = document.createElementNS(SVG_NAMESPACE, 'g');\r\n// inner.setAttribute('class', 'a9s-inner');\r\n\r\n// const lineHorizontal = this.drawLineHorizontal(x, y, 25, 4);\r\n// lineHorizontal.setAttribute('class', 'a9s-pointcross-h');\r\n\r\n// const lineVertical = this.drawLineVertical(x, y, 25, 4);\r\n// lineVertical.setAttribute('class', 'a9s-pointcross-v');\r\n\r\n// inner.appendChild(lineHorizontal);\r\n// inner.appendChild(lineVertical);\r\n\r\n// // const outer = this.drawLineVertical(x, y, 50, 4);\r\n// const outer = document.createElementNS(SVG_NAMESPACE, 'g');\r\n// outer.setAttribute('class', 'a9s-outer');\r\n\r\n// outer.appendChild(lineHorizontal);\r\n// outer.appendChild(lineVertical);\r\n\r\n// this.group.appendChild(inner);\r\n// this.group.appendChild(outer);\r\n\r\n// // this.group.appendChild(this.cross);\r\n\r\n// g.appendChild(this.group);\r\n// }\r\n\r\n\r\n\r\n//   get element() {\r\n//     return this.group;\r\n//   }\r\n\r\n//   destroy = () => {\r\n//     this.group.parentNode.removeChild(this.group); \r\n//     // this.cross = null;\r\n//     this.group = null;\r\n//   }\r\n\r\n\r\n\r\n//   toSelection = () =>\r\n//     new Selection({\r\n//       ...toSVGTarget(this.group, this.env.image),\r\n//       renderedVia: {\r\n//         name: 'pointcross'\r\n//       }\r\n//     });\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// TODO optional: mask to dim the outside area\r\n//import Mask from './FreehandMask';\r\n\r\n/**\r\n * A 'rubberband' selection tool for creating freehand drawing by\r\n * clicking and dragging.\r\n */\r\nexport default class PointcrossSelection {\r\n\r\n  constructor(anchor, g, env) {\r\n    this.point = anchor;\r\n\r\n    this.env = env;\r\n\r\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\r\n\r\n    this.pointcross = document.createElementNS(SVG_NAMESPACE, 'g');\r\n    this.pointcross.setAttribute('class', 'a9s-selection');\r\n\r\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\r\n    this.outer.setAttribute('class', 'a9s-outer');\r\n\r\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\r\n    this.inner.setAttribute('class', 'a9s-inner');\r\n\r\n    this.setPoint(this.point);\r\n\r\n   // TODO optional: mask to dim the outside area\r\n   // this.mask = new Mask(env.image, this.inner);\r\n\r\n    this.pointcross.appendChild(this.outer);\r\n    this.pointcross.appendChild(this.inner);\r\n\r\n    // Additionally, selection remains hidden until \r\n    // the user actually moves the mouse\r\n    // this.group.style.display = 'none';\r\n\r\n   // TODO optional: mask to dim the outside area\r\n   // this.group.appendChild(this.mask.element);\r\n    this.group.appendChild(this.pointcross);\r\n\r\n    g.appendChild(this.group);\r\n\r\n    console.log('hey')\r\n  }\r\n\r\n  setPoint = point => {\r\n    this.group.style.display = null;\r\n    const x = parseFloat(point[0]);\r\n    const y = parseFloat(point[1]);\r\n    const startX = x - 25;\r\n    const endX = x + 25;\r\n    const startY = y - 25;\r\n    const endY = y + 25;\r\n\r\n    const str = 'M' + x + ',' + startY + ' ' + 'V' + endY + ' ' + 'M' + startX + ',' + y + ' ' + 'H' + endX;\r\n\r\n\r\n    // 'M0,-1 V1 M-1,0 H1'\r\n\r\n\r\n    this.outer.setAttribute('d', str);\r\n    this.inner.setAttribute('d', str);\r\n  }\r\n\r\n  getBoundingClientRect = () =>\r\n    this.outer.getBoundingClientRect();\r\n\r\n  dragTo = xy => {\r\n    // Make visible\r\n    console.log(xy)\r\n    // this.group.style.display = null;\r\n\r\n    //TODO optional: edge smoothing\r\n    \r\n    this.setPoint(xy);   \r\n\r\n   // TODO optional: mask to dim the outside area\r\n   // this.mask.redraw();\r\n  }\r\n\r\n\r\n  get element() {\r\n    \r\n    console.log('hey2')\r\n    return this.pointcross;\r\n  }\r\n\r\n  destroy = () => {\r\n    console.log('8');\r\n    this.group.parentNode.removeChild(this.group);\r\n    this.pointcross = null;    \r\n    this.group = null;\r\n  }\r\n\r\n//   toSelection = () => {\r\n//     // new Selection({\r\n//     //     ...toSVGTarget(this.group, this.env.image),\r\n//     //     renderedVia: {\r\n//     //       name: 'pointcross'\r\n//     //     }\r\n//     //   });\r\n    \r\n//     console.log('hey3')\r\n//     return new Selection(toSVGTarget(this.group, this.env.image));\r\n//   }\r\n\r\n    toSelection = () =>\r\n    new Selection({\r\n      ...toSVGTarget(this.group, this.env.image),\r\n      renderedVia: {\r\n        name: 'pointcross'\r\n      }\r\n    });\r\n\r\n}\r\n","import Tool, { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport EditablePointcross from './EditablePointcross';\nimport { toFragment, isPointcross } from './Pointcross';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport PointcrossSelection from './PointcrossSelection';\n\n// export default class PointcrossTool extends Tool {\n\n//   constructor(g, config, env) {\n//     super(g, config, env);\n//   }\n\n//   drawPointcross = (x, y) => {\n//     const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n//     containerGroup.setAttribute('class', 'a9s-inner');\n\n//     const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n//     const drawLineHorizontal = size => {\n//       const xStart = x - size;\n//       const xEnd = x + size;\n      \n//       const line = document.createElementNS(SVG_NAMESPACE, 'line');\n//       line.setAttribute('x1', xStart);\n//       line.setAttribute('y1', y);\n//       line.setAttribute('x2', xEnd);\n//       line.setAttribute('y2', y);\n//       line.setAttribute('transform-origin', `${x} ${y}`);\n//       return line;\n//     }\n\n//     const drawLineVertical = size => {\n//       const yStart = y - size;\n//       const yEnd = y + size;\n      \n//       const line = document.createElementNS(SVG_NAMESPACE, 'line');\n//       line.setAttribute('x1', x);\n//       line.setAttribute('y1', yStart);\n//       line.setAttribute('x2', x);\n//       line.setAttribute('y2', yEnd);\n//       line.setAttribute('transform-origin', `${x} ${y}`);\n//       return line;\n//     }\n\n//     // const radius = this.config.handleRadius || 6;\n\n//     const inner = drawLineHorizontal(100);\n//     inner.setAttribute('class', 'a9s-handle-inner')\n\n//     const outer = drawLineVertical(100);\n//     outer.setAttribute('class', 'a9s-handle-outer')\n\n//     group.appendChild(outer);\n//     group.appendChild(inner);\n\n//     containerGroup.appendChild(group);\n//     return containerGroup;\n//   }\n\n//   startDrawing = (x, y, _, evt) => {\n//     // The top-most existing annotation at this position (if any) \n//     // const annotation = evt.target.closest('.a9s-annotation')?.annotation;\n\n//     // The point drawing tool will ALWAYS create a point annotation,\n//     // regardless of whether there's already an annotation underneath.\n//     // UNLESS the annotation underneath is itself a point!\n//     // if (!annotation || !isPointcross(annotation)) {\n//       // const element = this.drawPointcross(x, y);\n//       // this.scaleHandle(element);\n\n//       // this.g.appendChild(element);\n\n//       console.log('here')\n//       this.pointcrossSelection = new PointcrossSelection(x, y , this.g, this.env);\n\n//       console.log('here2')\n//       // const shape = this.pointcrossSelection.element;\n//       const shape = this.pointcrossSelection.element;\n//       shape.annotation = this.pointcrossSelection.toSelection();\n//       this.emit('complete', shape);\n      \n//       console.log('here3')\n\n\n//       // element.annotation = new Selection(toFragment(x, y, this.env.image, this.config.fragmentUnit));\n\n//       // this.emit('complete', element);\n//     // } else {\n//       // this.emit('cancel')\n//     // }\n//   }\n\n//   stop = () => {\n//     // Nothing to do\n//   }\n\n//   get isDrawing() {\n//     // Point selection is an instant action - the\n//     // tool is never an 'drawing' state\n//     return false;\n//   }\n  \n//   createEditableShape = annotation =>\n//     new EditablePointcross(annotation, this.g, this.config, this.env);\n\n// }\n\n// PointcrossTool.identifier = 'pointcross';\n\n// PointcrossTool.supports = annotation => {\n//   // Not needed, since the target.renderedVia property will be evaluated first\n//   return false;\n// }\n\n// // PointcrossTool.supports = annotation => {\n// //   const selector = annotation.selector('SvgSelector');\n// //   if (selector)\n// //     return selector.value?.match(/^<svg.*<line/g);\n// // }\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A rubberband selector for freehand fragments.\n */\nexport default class PointcrossTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n  }\n\n  startDrawing = (x, y) => {\n    // this._isDrawing = true;\n    \n    // this.attachListeners({\n    //   mouseMove: this.onMouseMove,\n    //   mouseUp: this.onMouseUp,\n    //   dblClick: this.onDblClick\n    // });\n    \n    // this.rubberband = new RubberbandFreehand([ x, y ], this.g, this.env);\n\n\n    console.log('here')\n    this.pointcrossSelection = new PointcrossSelection([x, y], this.g, this.env);\n\n    console.log('here2')\n    // const shape = this.pointcrossSelection.element;\n    const shape = this.pointcrossSelection.element;\n    shape.annotation = this.pointcrossSelection.toSelection();\n    this.emit('complete', shape);\n    \n    console.log('here3')\n\n  }\n\n  stop = () => {\n\n  }\n\n  get isDrawing() {\n    return false;\n  }\n\n  createEditableShape = annotation =>\n    new EditablePointcross(annotation, this.g, this.config, this.env);\n\n}\n\nPointcrossTool.identifier = 'pointcross';\n\nPointcrossTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return (selector.value.match(/^<svg.*<path*/g) && !selector.value.toUpperCase().includes('Z'));\n}\n\n// PointcrossTool.supports = annotation => {\n//   // Not needed, since the target.renderedVia property will be evaluated first\n//   return true;\n// }\n\n// PointcrossTool.supports = annotation => {\n//   const selector = annotation.selector('SvgSelector');\n//   if (selector)\n//     return (selector.value.match(/^<svg.*<path*/g) && !selector.value.toUpperCase().includes('Z'));\n// }","import { SVG_NAMESPACE, addClass } from '../util/SVG';\n\n/** \n * Parses a W3C Web Annotation FragmentSelector conforming\n * to the Media Fragments spec. Supports (well-formed) xywh=pixel\n * and xywh=percent fragments. \n */\nexport const parseRectFragment = (annotation, image) => {\n  const selector = annotation.selector('FragmentSelector');\n\n  if (selector?.conformsTo.startsWith('http://www.w3.org/TR/media-frags')) {\n    const { value } = selector;\n  \n    const format = value.includes(':') ? value.substring(value.indexOf('=') + 1, value.indexOf(':')) : 'pixel';\n    const coords = value.includes(':') ? value.substring(value.indexOf(':') + 1) : value.substring(value.indexOf('=') + 1);\n\n    let [ x, y, w, h ] = coords.split(',').map(parseFloat);\n\n    if (format.toLowerCase() === 'percent') {\n      x = x * image.naturalWidth  / 100;\n      y = y * image.naturalHeight / 100;\n      w = w * image.naturalWidth  / 100;\n      h = h * image.naturalHeight / 100;\n    }\n\n    return { x, y, w, h };\n  }\n}\n\n/** \n * Serializes a (x, y, w, h)-tuple as Media Fragment selector\n * using pixel coordinates.\n */\nconst toPixelRectFragment = (x, y, w, h, image) => ({\n  source: image?.src,\n  selector: {\n    type: \"FragmentSelector\",\n    conformsTo: \"http://www.w3.org/TR/media-frags/\",\n    value: `xywh=pixel:${x},${y},${w},${h}`\n  }\n});\n\n/** \n * Serializes a (x, y, w, h)-tuple as Media Fragment selector \n * using percent coordinates.\n */\nconst toPercentRectFragment = (x, y, w, h, image) => {\n  const px = x / image.naturalWidth  * 100;\n  const py = y / image.naturalHeight * 100;\n  const pw = w / image.naturalWidth  * 100;\n  const ph = h / image.naturalHeight * 100;\n\n  return {\n    source: image.src,\n    selector: {\n      type: \"FragmentSelector\",\n      conformsTo: \"http://www.w3.org/TR/media-frags/\",\n      value: `xywh=percent:${px},${py},${pw},${ph}`\n    }\n  }\n}\n\nexport const toRectFragment = (x, y, w, h, image, fragmentUnit) =>\n  fragmentUnit?.toLowerCase() === 'percent' ?\n    toPercentRectFragment(x, y, w, h, image) :\n    toPixelRectFragment(x, y, w, h, image);\n\n/** Shorthand to apply the given (x, y, w, h) to the SVG shape **/\nconst setXYWH = (shape, x, y, w, h) => {\n  shape.setAttribute('x', x);\n  shape.setAttribute('y', y);\n  shape.setAttribute('width', w);\n  shape.setAttribute('height', h);\n}\n\n\nconst setPointXY = (shape, x, y) => {\n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', 7); // TODO make configurable\n}\n\nexport const drawRectMask = (imageDimensions, x, y, w, h) => {\n  const mask = document.createElementNS(SVG_NAMESPACE, 'path');\n  mask.setAttribute('fill-rule', 'evenodd');\n\n  const { naturalWidth, naturalHeight } = imageDimensions;\n  mask.setAttribute('d', `M0 0 h${naturalWidth} v${naturalHeight} h-${naturalWidth} z M${x} ${y} h${w} v${h} h-${w} z`);\n\n  return mask;\n}\n\nexport const setRectMaskSize = (mask, imageDimensions, x, y, w, h) => {\n  const { naturalWidth, naturalHeight } = imageDimensions;\n  mask.setAttribute('d', `M0 0 h${naturalWidth} v${naturalHeight} h-${naturalWidth} z M${x} ${y} h${w} v${h} h-${w} z`);\n}\n\n/** \n * Draws an SVG rectangle, either from an annotation, or an\n * (x, y, w, h)-tuple.\n */\nexport const drawRect = (arg1, arg2, arg3, arg4) => {\n  const { x, y, w, h } = arg1.type === 'Annotation' || arg1.type === 'Selection' ?\n    parseRectFragment(arg1, arg2) : { x: arg1, y: arg2, w: arg3, h: arg4 };\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  if (w === 0 && h === 0) {\n    // Edge case: rect is actually a point\n    addClass(g, 'a9s-point');\n    addClass(g, 'a9s-non-scaling');\n    g.setAttribute('transform-origin', `${x} ${y}`);\n\n    const outerPoint  = document.createElementNS(SVG_NAMESPACE, 'circle');\n    const innerPoint  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n    innerPoint.setAttribute('class', 'a9s-inner');\n    setPointXY(innerPoint, x, y);\n\n    outerPoint.setAttribute('class', 'a9s-outer');\n    setPointXY(outerPoint, x, y);\n\n    g.appendChild(outerPoint);\n    g.appendChild(innerPoint);  \n  } else {\n    const outerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\n    const innerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\n\n    innerRect.setAttribute('class', 'a9s-inner');\n    setXYWH(innerRect, x, y, w, h);\n\n    outerRect.setAttribute('class', 'a9s-outer');\n    setXYWH(outerRect, x, y, w, h);\n\n    g.appendChild(outerRect);\n    g.appendChild(innerRect);\n  }\n\n  return g;\n}\n\n/** Gets the (x, y, w, h)-values from the attributes of the SVG group **/\nexport const getRectSize = g => {\n  const outer = g.querySelector('.a9s-outer');\n\n  if (outer.nodeName === 'rect') {\n    const x = parseFloat(outer.getAttribute('x'));\n    const y = parseFloat(outer.getAttribute('y'));\n    const w = parseFloat(outer.getAttribute('width'));\n    const h = parseFloat(outer.getAttribute('height'));\n\n    return { x, y, w, h };\n  } else {\n    const x = parseFloat(outer.getAttribute('cx'));\n    const y = parseFloat(outer.getAttribute('cy'));\n\n    return { x, y, w: 0, h: 0 };\n  }\n}\n\n/** Applies the (x, y, w, h)-values to the rects in the SVG group **/\nexport const setRectSize = (g, x, y, w, h) => {\n  const inner = g.querySelector('.a9s-inner');\n  const outer = g.querySelector('.a9s-outer');\n\n  if (outer.nodeName === 'rect') {\n    setXYWH(inner, x, y, w, h);\n    setXYWH(outer, x, y, w, h);  \n  } else {\n    setPointXY(inner, x, y);\n    setPointXY(outer, x, y);\n  }\n}\n\n/** \n * Shorthand to get the area (rectangle w x h) from the \n * annotation's fragment selector. \n */\nexport const rectArea = (annotation, image) => {\n  const { w, h } = parseRectFragment(annotation, image);\n  return w * h;\n}\n\n","import { toRectFragment } from '@recogito/annotorious/src/selectors/RectFragment';\n\nexport const isPoint = annotation =>\n  annotation.target.renderedVia?.name === 'point';\n\nexport const toFragment = (x, y, image, fragmentUnit) => ({\n  ...toRectFragment(x, y, 0, 0, image, fragmentUnit),\n  renderedVia: {\n    name: 'point'\n  }\n});","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { parseRectFragment } from '@recogito/annotorious/src/selectors/RectFragment';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { toFragment } from './Point';\n\nexport default class EditablePoint extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    const { x, y } = parseRectFragment(annotation, env.image);\n\n    this.container = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n\n    this.point = this.drawHandle(x, y);\n    this.point.addEventListener('mousedown', this.onGrab);\n    \n    this.elementGroup.appendChild(this.point);\n\n    this.container.appendChild(this.elementGroup);\n    g.appendChild(this.container);\n\n    // true if te mouse has grabbed the point\n    this.isGrabbed = false;\n  }\n\n  onScaleChanged = () => \n    this.scaleHandle(this.point);\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  onGrab = () => {\n    this.isGrabbed = true;\n  }\n\n  onMouseMove = evt => {\n    if (evt.button !== 0) return;  // left click\n\n    if (this.isGrabbed) {\n      const {x, y} = this.getSVGPoint(evt);\n\n      this.setHandleXY(this.point, x, y);\n\n      const target = toFragment(x, y, this.env.image, this.config.fragmentUnit);\n      this.emit('update', target);\n    }\n  }\n\n  onMouseUp = () => {\n    this.isGrabbed = false;\n  }\n\n  updateState = annotation => {\n    const { x, y } = parseRectFragment(annotation, this.env.image);\n    this.setHandleXY(this.point, x, y);\n  }\n\n  destroy() {\n    this.svg.removeEventListener('mousemove', this.onMouseMove);\n    this.svg.removeEventListener('mouseup', this.onMouseUp);\n\n    this.container.parentNode.removeChild(this.container);\n    super.destroy();\n  }\n\n}","import Tool, { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport EditablePoint from './EditablePoint';\nimport { toFragment, isPoint } from './Point';\n\nexport default class PointTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n  }\n\n  startDrawing = (x, y, _, evt) => {\n    // The top-most existing annotation at this position (if any) \n    const annotation = evt.target.closest('.a9s-annotation')?.annotation;\n\n    // The point drawing tool will ALWAYS create a point annotation,\n    // regardless of whether there's already an annotation underneath.\n    // UNLESS the annotation underneath is itself a point!\n    if (!annotation || !isPoint(annotation)) {\n      const element = this.drawHandle(x, y);\n      this.scaleHandle(element);\n\n      this.g.appendChild(element);\n\n      element.annotation = new Selection(toFragment(x, y, this.env.image, this.config.fragmentUnit));\n\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel')\n    }\n  }\n\n  stop = () => {\n    // Nothing to do\n  }\n\n  get isDrawing() {\n    // Point selection is an instant action - the\n    // tool is never an 'drawing' state\n    return false;\n  }\n  \n  createEditableShape = annotation =>\n    new EditablePoint(annotation, this.g, this.config, this.env);\n\n}\n\nPointTool.identifier = 'point';\n\nPointTool.supports = annotation => {\n  // Not needed, since the target.renderedVia property will be evaluated first\n  return false;\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\nconst setXYR = (shape, x, y, r) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', r);\n}\n\n/** \n * Draws an SVG circle, either from an annotation, or an\n * (cx, cy, r)-tuple.\n */\nexport const drawCircle = (cx, cy, r) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const outerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n  const innerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n  innerCircle.setAttribute('class', 'a9s-inner');\n  setXYR(innerCircle, cx, cy, r);\n\n  outerCircle.setAttribute('class', 'a9s-outer');\n  setXYR(outerCircle, cx, cy, r);\n\n  g.appendChild(outerCircle);\n  g.appendChild(innerCircle);\n\n  return g;\n}\n\nexport const setCircleSize = (g, cx, cy, r) => {\n  const innerCircle = g.querySelector('.a9s-inner');\n  const outerCircle = g.querySelector('.a9s-outer');\n  \n  setXYR(innerCircle, cx, cy, r);\n  setXYR(outerCircle, cx, cy, r);\n}\n\nexport const getCircleSize = g => {\n  const outerCircle = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerCircle.getAttribute('cx'));\n  const cy = parseFloat(outerCircle.getAttribute('cy'));\n  const r = parseFloat(outerCircle.getAttribute('r'));\n  \n  return { cx, cy, r };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getCircleSize } from './Circle';\n\nexport default class CircleMask {\n\n  constructor(imageDimensions, circle) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.circle = circle;\n\n    const { cx, cy, r } = getCircleSize(this.circle);\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawCircle, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * A 'rubberband' selection tool for creating a circle by\n * clicking and dragging.\n */\nexport default class RubberbandCircle {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawCircle(anchorX, anchorY, 2);\n    this.circle.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.circle);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.circle);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.circle;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    const { naturalWidth, naturalHeight } = this.env.image;\n\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n    const r = Math.max(1, Math.pow(w ** 2 + h ** 2, 0.5) / 2);\n\n    const cx = this.anchor[0] + w / 2;\n    const cy = this.anchor[1] + h / 2;\n\n    if ((cx-r < 0 || cx + r > naturalWidth) || (cy-r < 0 || cy + r > naturalHeight)) return;\n    \n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.circle.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.circle = null;\n    this.group = null;\n  }\n\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getCircleSize, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * An editable circle shape.\n */\nexport default class EditableCircle extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <circle class=\"a9s-outer\" ... />\n    //     <circle class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable circle compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawEmbeddedSVG(annotation);\n    this.circle.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.circle));\n\n    this.mask = new Mask(env.image, this.circle);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = circle + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.circle);    \n\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    this.handles = [\n      [ cx, cy - r ],\n      [ cx + r, cy ],\n      [ cx, cy + r ],\n      [ cx - r, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.circle, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, r) => {\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - r);\n    this.setHandleXY(topright, cx + r, cy);\n    this.setHandleXY(bottomright, cx, cy + r);\n    this.setHandleXY(bottomleft, cx - r, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var width = 0;\n    var height = 0;\n    var r;\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n      height = mouseY - anchor.y;\n      r = Math.abs(height) / 2;\n    } else {\n      mouseY = anchor.y;\n      width = mouseX - anchor.x;\n      r = Math.abs(width) / 2;\n    }\n\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - r);\n      this.setHandleXY(this.handles[idx2], cx, cy + r);\n      this.setHandleXY(this.handles[1], cx + r, cy);\n      this.setHandleXY(this.handles[3], cx - r, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + r, cy);\n      this.setHandleXY(this.handles[idx1], cx - r, cy);\n      this.setHandleXY(this.handles[0], cx, cy - r);\n      this.setHandleXY(this.handles[2], cx, cy + r);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n    \n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getCircleSize(this.circle);\n    \n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.circle) {\n        const { r } = getCircleSize(this.circle);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = Math.max(constrain(pos.x - this.grabbedAt.x, naturalWidth - r), r);\n        const cy = Math.max(constrain(pos.y - this.grabbedAt.y, naturalHeight - r), r);\n\n        this.setSize(cx, cy, r); \n        this.emit('update', toSVGTarget(this.circle, this.env.image)); \n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n        this.emit('update', toSVGTarget(this.circle, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  onScaleChanged = scale =>\n    this.handles.map(this.scaleHandle);\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const r =  parseFloat(shape.getAttribute('r'));\n\n    this.setSize(cx, cy, r);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandCircle from './RubberbandCircle';\nimport EditableCircle from './EditableCircle';\n\n/**\n * A rubberband selector for circle selections.\n */\nexport default class RubberbandCircleTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandCircle(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableCircle(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandCircleTool.identifier = 'circle';\n\nRubberbandCircleTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<circle/g);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\nconst setXYR = (shape, x, y, rx, ry) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('rx', rx);\n  shape.setAttribute('ry', ry);\n}\n\n/** \n * Draws an SVG ellipse, either from an annotation, or an\n * (cx, cy, rx, ry)-tuple.\n */\nexport const drawEllipse = (cx, cy, rx, ry) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const innerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n  const outerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n\n  innerEllipse.setAttribute('class', 'a9s-inner');\n  setXYR(innerEllipse, cx, cy, rx, ry);\n\n  outerEllipse.setAttribute('class', 'a9s-outer');\n  setXYR(outerEllipse, cx, cy, rx, ry);\n\n  g.appendChild(outerEllipse);\n  g.appendChild(innerEllipse);\n\n  return g;\n}\n\nexport const setEllipseSize = (g, cx, cy, rx, ry) => {\n  const innerEllipse = g.querySelector('.a9s-inner');\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  setXYR(innerEllipse, cx, cy, rx, ry);\n  setXYR(outerEllipse, cx, cy, rx, ry);\n}\n\nexport const getEllipseSize = g => {\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerEllipse.getAttribute('cx'));\n  const cy = parseFloat(outerEllipse.getAttribute('cy'));\n  const rx = parseFloat(outerEllipse.getAttribute('rx'));\n  const ry = parseFloat(outerEllipse.getAttribute('ry'));\n  \n  return { cx, cy, rx, ry };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getEllipseSize } from './Ellipse';\n\nexport default class EllipseMask {\n\n  constructor(imageDimensions, ellipse) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.ellipse = ellipse;\n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawEllipse, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * A 'rubberband' selection tool for creating a ellipse by\n * clicking and dragging.\n */\nexport default class RubberbandEllipse {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEllipse(anchorX, anchorY, 2);\n    this.ellipse.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.ellipse);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.ellipse;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n\n    const cx = w > 0 ? this.anchor[0] + w / 2 : oppositeX + w / 2;\n    const cy = h > 0 ? this.anchor[1] + h / 2 : oppositeY + h / 2;\n\n    const rx = Math.abs(w / 2);\n    const ry = Math.abs(h / 2);\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.ellipse.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.ellipse = null;\n    this.group = null;\n  }\n\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getEllipseSize, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * An editable ellipse shape.\n */\nexport default class EditableEllipse extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <ellipse class=\"a9s-outer\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable ellipse compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEmbeddedSVG(annotation);\n    this.ellipse.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.ellipse));\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = ellipse + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.ellipse);    \n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    this.handles = [\n      [ cx, cy - ry ],\n      [ cx + rx, cy ],\n      [ cx, cy + ry ],\n      [ cx - rx, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.ellipse, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, rx, ry) => {\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - ry);\n    this.setHandleXY(topright, cx + rx, cy);\n    this.setHandleXY(bottomright, cx, cy + ry);\n    this.setHandleXY(bottomleft, cx - rx, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, leftHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n    const anchorLeft = this.getHandleXY(leftHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var rx = 0;\n    var ry = 0;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n    } else {\n      mouseY = anchor.y;\n    }\n\n    const width = mouseX - anchor.x;\n    const height = mouseY - anchor.y;\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n    var rx = w/2;\n    var ry = h/2;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      rx = Math.abs(anchor.x - anchorLeft.x);\n    } else {\n      ry = Math.abs(anchor.y - anchorLeft.y);\n    }\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - ry);\n      this.setHandleXY(this.handles[idx2], cx, cy + ry);\n      this.setHandleXY(this.handles[1], cx + rx, cy);\n      this.setHandleXY(this.handles[3], cx - rx, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + rx, cy);\n      this.setHandleXY(this.handles[idx1], cx - rx, cy);\n      this.setHandleXY(this.handles[0], cx, cy - ry);\n      this.setHandleXY(this.handles[2], cx, cy + ry);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n\n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getEllipseSize(this.ellipse);\n\n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.ellipse) {\n        const { rx, ry } = getEllipseSize(this.ellipse);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = constrain(pos.x - this.grabbedAt.x, naturalWidth - rx);\n        const cy = constrain(pos.y - this.grabbedAt.y, naturalHeight - ry);\n\n        this.setSize(cx, cy, rx, ry); \n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n        const leftHandle = this.handles[(handleIdx + 3) % 4];\n\n        this.stretchCorners(handleIdx, oppositeHandle, leftHandle, pos);\n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  onScaleChanged = scale =>\n    this.handles.map(this.scaleHandle);\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const rx = parseFloat(shape.getAttribute('rx'));\n    const ry = parseFloat(shape.getAttribute('ry'));\n    \n    this.setSize(cx, cy, rx, ry);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandEllipse from './RubberbandEllipse';\nimport EditableEllipse from './EditableEllipse';\n\n/**\n * A rubberband selector for ellipse selections.\n */\nexport default class RubberbandEllipseTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandEllipse(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableEllipse(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandEllipseTool.identifier = 'ellipse';\n\nRubberbandEllipseTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<ellipse/g);\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\n/**\n * A 'rubberband' selection tool for creating freehand drawing by\n * clicking and dragging.\n */\nexport default class RubberbandFreehand {\n\n  constructor(anchor, g, env) {\n    this.points = [ anchor ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.freehand = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.freehand.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.freehand.appendChild(this.outer);\n    this.freehand.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n   // TODO optional: mask to dim the outside area\n   // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.freehand);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var str = points.map(pt => `L${pt[0]} ${pt[1]}`).join(' ');\n    str = 'M' + str.substring(1);\n    this.outer.setAttribute('d', str);\n    this.inner.setAttribute('d', str);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    //TODO optional: edge smoothing\n\n    this.addPoint(xy);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  addPoint = xy => {\n    this.points = [ ...this.points, xy ];\n    this.setPoints(this.points);   \n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  get element() {\n    return this.freehand;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.freehand = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\nconst getPoints = shape => {\n  const pointList = shape.getAttribute('d').split('L');\n  const points = [];\n  if(pointList.length > 0) {\n    var point = pointList[0].substring(1).trim().split(' ');\n    points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n\n    for (let i = 1; i < pointList.length; i++) {\n      var point = pointList[i].trim().split(' ');\n      points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n    }\n  }\n\n  return points;\n}\n\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\n\n/**\n * An editable freehand drawing.\n */\nexport default class EditableFreehand extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    console.log('freeCreated');\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num => Math.round(10 * num) / 10;\n\n    var str = points.map(pt => `L${round(pt.x)} ${round(pt.y)}`).join(' ');\n    str = 'M' + str.substring(1);\n\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    const { x, y, width, height } = outer.getBBox();\n\n    // TODO optional: mask to dim the outside area\n    // this.mask.redraw();\n\n    // TODO optional: handles to stretch the shape\n/*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n\n    this.setHandleXY(topleft, x, y);\n    this.setHandleXY(topright, x + width, y);\n    this.setHandleXY(bottomright, x + width, y + height);\n    this.setHandleXY(bottomleft, x, y + height);*/\n\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      const { x, y, width, height } = getBBox(this.shape);\n\n      if (this.grabbedElem === this.shape) {\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const inner = this.shape.querySelector('.a9s-inner');\n        const updatedPoints = getPoints(inner).map(pt => ({ x: pt.x + dx, y: pt.y + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n      // TODO optional: handles to stretch the shape\n      /* else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }*/\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandFreehand from './RubberbandFreehand';\nimport EditableFreehand from './EditableFreehand';\n\n/**\n * A rubberband selector for freehand fragments.\n */\nexport default class RubberbandFreehandTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandFreehand([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y) => {\n    this.onDblClick(x, y);\n  }\n\n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    this.detachListeners();\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth || height >= minHeight) {\n\n      const shape = this.rubberband.element;\n      shape.annotation = this.rubberband.toSelection();\n\n      this.emit('complete', shape);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation =>\n    new EditableFreehand(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandFreehandTool.identifier = 'freehand';\n\nRubberbandFreehandTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return (selector.value.match(/^<svg.*<path*/g) && !selector.value.toUpperCase().includes('Z'));\n}","import { SVG_NAMESPACE } from '../../util/SVG';\n\nexport default class PolygonMask {\n\n  constructor(imageDimensions, polygon) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.polygon = polygon;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.polygon.getAttribute('points')} z`);\n  }\n\n  redraw = () => {\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.polygon.getAttribute('points')} z`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport Mask from '@recogito/annotorious/src/tools/polygon/PolygonMask';\n\n// TODO optional: mask to dim the outside area\n//import Mask from './multipolygonMask';\n\n/**\n * A 'rubberband' selection tool for creating multipolygon drawing by\n * clicking and dragging.\n */\nexport default class RubberbandMultipolygon {\n\n  constructor(anchor, g, env) {\n    this.points =  [];\n    this.points.push([ anchor, anchor ])\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.multipolygon = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.multipolygon.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n    this.mask = new Mask(env.image, this.inner);\n\n    // TODO optional: mask to dim the outside area\n    // this.mask = new Mask(env.image, this.inner);\n\n    this.multipolygon.appendChild(this.outer);\n    this.multipolygon.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    // TODO optional: mask to dim the outside area\n    // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.multipolygon);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var attr =\"\";\n\n    for (var ps of points){\n      var attr2=\"\"\n      if (ps.length>0){\n        for (var p of ps) {\n          if (p){\n            if (attr2===\"\"){\n              attr2  +=`M${p[0]},${p[1]}`;\n            }\n            else{\n              attr2  +=` L${p[0]},${p[1]}`;\n            }\n          }\n        };\n         attr+=attr2\n      }\n    }\n\n    attr+=\" Z\"\n    \n    this.outer.setAttribute('d', attr);\n    this.inner.setAttribute('d', attr);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n    const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n    var headRest=this.points.slice(0,-1)\n    const rubberband = [ ...head, xy, head[0] ];\n    headRest.push(rubberband)\n    this.setPoints(headRest);\n    this.mask.redraw();\n  }\n  \n  addPoint = xy => {\n    // Don't add a new point if distance < 2 pixels\n    if (this.points[this.points.length - 1].length>0){\n      const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n      const lastCorner = head[head.length - 1];\n      const dist = Math.pow(xy[0] - lastCorner[0], 2) + Math.pow(xy[1] - lastCorner[1], 2);\n      if (dist > 4) {\n        this.points[this.points.length - 1] = [ ...head, xy, head[0] ];\n        this.setPoints(this.points);   \n        this.mask.redraw();\n      } \n    } else{\n      this.points[this.points.length - 1] = [xy,xy];\n      this.setPoints(this.points);\n    }\n  }\n\n  undo = () => {\n    if (this.points[this.points.length - 1].length>2){\n      this.points[this.points.length - 1].pop();\n    } else {\n      if (this.points.length>1){\n        this.points.pop()\n      }\n    }\n  }\n\n  newPart = () => {\n    this.points.push([]);\n  }\n \n  get element() {\n    return this.multipolygon;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.multipolygon = null;    \n    this.group = null;\n  }\n\n  toSelection = () =>\n    new Selection({\n      ...toSVGTarget(this.group, this.env.image),\n      renderedVia: {\n        name: 'multipolygon'\n      }\n    });\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n\n// TODO optional: mask to dim the outside area\n//import Mask from './MultipolygonMask';\n\nconst getPoints = (shape) => {\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\n  // IE11 :-(\n  const pointLists = getPointsFromPathValue(shape.querySelector('.a9s-inner').attributes.d.nodeValue)\n  const pointArray = [];\n  for (let pointList of pointLists) {\n    let points = []\n    for (let point of pointList) {\n      let p = {\n        x:parseFloat(point[0]),\n        y:parseFloat(point[1])\n      }\n      points.push(p);\n    }\n    pointArray.push(points);\n  }\n\n  return pointArray;\n}\nconst getPointsFromPathValue = polygon => {\n  var results =polygon.split('M');\n  var allcoords = []\n  results.forEach(function (result, index) {\n    if (result.length>0){\n      let coords = []\n      result=result.replace(/ Z/g,\"Z\")\n      result=result.replace(/Z /g,\"Z\")\n      result=result.replace(/Z/g,\"\")\n      result=result.replace(/L /g,\"L\")\n      result=result.replace(/ L/g,\"L\")\n      var coordsString = result.split(\"L\")\n      coordsString.forEach(function(coord, index){\n        coords.push([parseFloat(coord.split(\",\")[0]).toFixed(2).toString(),parseFloat(coord.split(\",\")[1]).toFixed(2).toString()]);\n      });\n      if (coords[0] !== coords[coords.length - 1]){\n        coords.push(coords[0])\n      }\n      allcoords.push(coords)\n    }\n  });\n  return allcoords\n}\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\nexport const svgFragmentToPoints = annotation => {\n  const svgShape = svgFragmentToShape(annotation);\n  var polygon = svgShape.getAttribute('d')\n  var allcoords =  getPointsFromPathValue(polygon)\n  return allcoords\n  //svgShape.getAttribute('d')\n  //  .split(' ') // Split x/y tuples\n  //  .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n}\n\nconst drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Hack\n  svgFragmentToPoints(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n/**\n * An editable multipolygon drawing.\n */\nexport default class EditableMultipolygon extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n    let pointList = getPoints(this.shape);\n    this.handles = []\n    for (let points of pointList){\n      this.handles.push(points.map(pt => {\n        const handle = this.drawHandle(pt.x, pt.y);\n        handle.addEventListener('mousedown', this.onGrab(handle));\n        this.elementGroup.appendChild(handle);\n        return handle;\n      }))\n    } \n\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    const round = num =>\n    Math.round(10 * num) / 10;\n\n    let str = \"\"\n    for (let pointList of points){\n      str += \"M\"\n      let first = true \n      for (let point of pointList){\n        if (first){\n          first = false\n          str += point.x.toString() + \",\" + point.y.toString()\n        } else {\n          str += \" L\" + round(point.x).toString() + \",\" + round(point.y).toString()\n        }\n      }\n      str += \" Z\"\n    }\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    // this.mask.redraw();\n\n    const { x, y, width, height } = outer.getBBox();\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    if (this.grabbedElem) {\n\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.shape) {\n        const dx = pos.x - this.grabbedAt.x;\n        const dy = pos.y - this.grabbedAt.y;\n\n        let pointList = getPoints(this.shape)\n\n        const updatedPoints = []\n        for (let points of pointList){\n          updatedPoints.push(points.map(pt =>\n            ({ x: pt.x + dx, y: pt.y + dy })))\n        } \n    \n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n        let i = 0\n        for (let updatedPointsList of updatedPoints){\n            updatedPointsList.forEach((pt, idx) => { \n              if (this.handles[i][idx] !== undefined)\n                this.setHandleXY(this.handles[i][idx], pt.x, pt.y)\n            });\n            i+=1\n        }\n        \n        this.emit('update', {\n          ...toSVGTarget(this.shape, this.env.image),\n          renderedVia: {\n            name: 'multipolygon'\n          }\n        });\n      } else {\n        let handleIdx = -1\n        let pointListIDX = 0\n        let found = false\n\n        for (let handle of this.handles){\n          if (handle.indexOf(this.grabbedElem)>0){\n            handleIdx = handle.indexOf(this.grabbedElem);\n            found=true\n          } else {\n            if (!found){\n              pointListIDX += 1\n            }\n          }\n        }\n  \n        let pointList = getPoints(this.shape)\n  \n        const updatedPoints = []\n        let updatedPointsIDX = 0\n        for (let points of pointList){\n          if (updatedPointsIDX === pointListIDX){\n            let newPoints = []\n            points.forEach(function (value, i) {\n              if (i === handleIdx){\n                newPoints.push(pos)\n              } else {\n                newPoints.push(value)\n              }\n            });\n            updatedPoints.push(newPoints)\n          } else {\n            updatedPoints.push(points)\n          }\n          updatedPointsIDX +=1\n        } \n       \n        this.setPoints(updatedPoints);\n        updatedPointsIDX = 0\n        for (let handle of this.handles){\n          if (updatedPointsIDX === pointListIDX){\n\n            this.setHandleXY(handle[handleIdx], pos.x, pos.y);\n          }\n          updatedPointsIDX +=1\n\n        }\n        \n        this.emit('update', {\n          ...toSVGTarget(this.shape, this.env.image),\n          renderedVia: {\n            name: 'multipolygon'\n          }\n        });\n      }\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandMultipolygon from './RubberbandMultipolygon';\nimport EditableMultipolygon from './EditableMultipolygon';\n\n/**\n * A rubberband selector for Multipolygon fragments.\n */\nexport default class RubberbandMultipolygonTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n    \n    document.addEventListener('keydown', evt => {\n      if (evt.key == \"z\" && evt.ctrlKey) {\n        this.undo();\n      }\n      \n      if (evt.key == 'n') {\n        this.newPart();\n      }\n    });  \n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandMultipolygon([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n  undo = () =>{\n    if (this.rubberband){\n      this.rubberband.undo();\n\n    }\n  }\n  newPart = () =>{\n    if (this.rubberband){\n      this.rubberband.newPart();\n\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y, evt) => {\n    if (evt.altKey){\n      this.onDblClick(evt);\n    } else if (evt.ctrlKey) {\n      this.rubberband.undo();\n    } else{\n      const { width, height } = this.rubberband.getBoundingClientRect();\n\n      const minWidth = this.config.minSelectionWidth || 4;\n      const minHeight = this.config.minSelectionHeight || 4;\n      \n      if (width >= minWidth || height >= minHeight) {\n        this.rubberband.addPoint([ x, y ]);\n      } else {\n        this.emit('cancel');\n        this.stop();\n      }\n    }\n  }\n  \n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    const shape = this.rubberband.element;\n    shape.annotation = this.rubberband.toSelection();\n    this.emit('complete', shape);\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation => \n    new EditableMultipolygon(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandMultipolygonTool.identifier = 'multipolygon';\n\nRubberbandMultipolygonTool.supports = annotation => false;","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\nexport default class LineMask {\n\n  constructor(imageDimensions, line) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.line = line;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');\n    this.mask.setAttribute('class', 'a9s-selection-mask');\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.line.getAttribute('x1')} ${this.line.getAttribute('y1')} z`);\n  }\n\n  redraw = () => {\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.line.getAttribute('x1')} ${this.line.getAttribute('y1')} ${this.line.getAttribute('x2')} ${this.line.getAttribute('y2')}z`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport Mask from './LineMask';\n\n\n/**\n * A 'rubberband' selection tool for creating Line drawing by\n * clicking and dragging.\n */\nexport default class RubberbandLine {\n\n  constructor(anchor, g, env) {\n    this.points =  anchor\n    //this.points.push([ anchor, anchor ])\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.Line = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.Line.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'line');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'line');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n    this.mask = new Mask(env.image, this.inner);\n\n    // TODO optional: mask to dim the outside area\n    // this.mask = new Mask(env.image, this.inner);\n\n    this.Line.appendChild(this.outer);\n    this.Line.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    // TODO optional: mask to dim the outside area\n    // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.Line);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    const attr = points;\n    // set attribute for line svg element for outer and inner\n    // example: <line x1=\"0\" y1=\"80\" x2=\"100\" y2=\"20\" stroke=\"black\" />\n    this.outer.setAttribute('x1', attr[0]);\n    this.inner.setAttribute('x1', attr[0]);\n    this.outer.setAttribute('y1', attr[1]);\n    this.inner.setAttribute('y1', attr[1]);\n    if(attr.length > 2) {\n    this.outer.setAttribute('x2', attr[2]);\n    this.inner.setAttribute('x2', attr[2]);\n    this.outer.setAttribute('y2', attr[3]);\n    this.inner.setAttribute('y2', attr[3]);\n    }\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    this.mousepos = xy;\n    //console.log(xy);\n    const rubberband = [ ...this.points, xy[0], xy[1] ];\n    \n    this.setPoints(rubberband);\n    this.mask.redraw();\n  }\n  \n  addPoint = xy => {\n    // Don't add a new point if distance < 2 pixels\n    if (this.points.length <= 2) {\n      this.points[2] = xy[0];\n      this.points[3] = xy[1];\n      this.setPoints(this.points);\n    }\n  }\n\n  undo = () => {\n    if (this.points[this.points.length - 1].length>2){\n      this.points[this.points.length - 1].pop();\n    } else {\n      if (this.points.length>1){\n        this.points.pop()\n      }\n    }\n  }\n\n  newPart = () => {\n    this.points.push([]);\n  }\n \n  get element() {\n    return this.Line;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.Line = null;    \n    this.group = null;\n  }\n\n  toSelection = () =>\n    new Selection({\n      ...toSVGTarget(this.group, this.env.image),\n      renderedVia: {\n        name: 'line'\n      }\n    });\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport Mask from './LineMask';\n\nconst getPoints = shape => {\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\n  // IE11 :-(\n  const innerElement = shape.querySelector('.a9s-inner');\n  const points = [\n    [innerElement.x1.baseVal, innerElement.y1.baseVal],\n    [innerElement.x2.baseVal, innerElement.y2.baseVal]\n  ];\n\n  return points;\n}\n\nconst getBBox = shape =>\n  shape.querySelector('.a9s-inner').getBBox();\n\n/**\n * An editable line shape.\n */\nexport default class EditableLine extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    //\n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <line class=\"a9s-outer\" ... />\n    //     <line class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g>\n    // </g>\n\n    // 'g' for the editable line shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.setAttribute('data-id', annotation.id);\n    this.elementGroup.appendChild(this.shape);\n\n    this.handles = getPoints(this.shape).map(pt => {\n      const handle = this.drawHandle(pt[0].value, pt[1].value);\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatters);\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  onScaleChanged = () => \n    this.handles.map(this.scaleHandle);\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num =>\n      Math.round(10 * num) / 10;\n\n    var x1 = points[0].x;\n    var y1 = points[0].y;\n    var x2 = points[1].x;\n    var y2 = points[1].y;\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('x1', x1);\n    inner.setAttribute('y1', y1);\n    inner.setAttribute('x2', x2);\n    inner.setAttribute('y2', y2);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('x1', x1);\n    outer.setAttribute('y1', y1);\n    outer.setAttribute('x2', x2);\n    outer.setAttribute('y2', y2);\n\n    this.mask.redraw();\n\n    const { x, y, width, height } = outer.getBBox();\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n  onGrab = grabbedElem => evt => {\n    if (evt.button !== 0) return;  // left click\n    this.grabbedElem = grabbedElem;\n    this.grabbedAt = this.getSVGPoint(evt);\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n      if (this.grabbedElem === this.shape) {\n        const { x, y, width, height } = getBBox(this.shape);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const updatedPoints = getPoints(this.shape).map(pt =>\n          ({ x: pt[0].value + dx, y: pt[1].value + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n        updatedPoints.forEach((pt, idx) => this.setHandleXY(this.handles[idx], pt.x, pt.y));\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      } else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n\n        const updatedPoints = getPoints(this.shape).map((pt, idx) =>\n          (idx === handleIdx) ? pos : {'x':pt[0].value, 'y':pt[1].value});\n\n        this.setPoints(updatedPoints);\n        this.setHandleXY(this.handles[handleIdx], pos.x, pos.y);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  // TODO: update this for line svg Attributes, currently not being used\n  updateState = annotation => {\n    const points = svgFragmentToShape(annotation)\n      .getAttribute('points')\n      .split(' ') // Split x/y tuples\n      .map(xy => { \n        const [ x, y ] = xy.split(',').map(str => parseFloat(str.trim()));\n        return { x, y };\n      });\n    \n\n      console.log(annotation)\n      console.log(svgFragmentToShape(annotation))\n      console.log(points)\n\n    this.setPoints(points);\n    points.forEach((pt, idx) => this.setHandleXY(this.handles[idx], pt.x, pt.y));\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandLine from './RubberbandLine';\nimport EditableLine from './EditableLine';\n\n/**\n * A rubberband selector for Line fragments.\n */\nexport default class RubberbandLineTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n    \n    document.addEventListener('keydown', evt => {\n      if (evt.key == \"z\" && evt.ctrlKey) {\n        this.undo();\n      }\n      \n      if (evt.key == 'n') {\n        this.newPart();\n      }\n    });  \n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n    });\n    \n    this.rubberband = new RubberbandLine([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n  undo = () =>{\n    if (this.rubberband){\n      this.rubberband.undo();\n\n    }\n  }\n  newPart = () =>{\n    if (this.rubberband){\n      this.rubberband.newPart();\n\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y, evt) => {\n    if (evt.altKey){\n      this.onDblClick(evt);\n    } else if (evt.ctrlKey) {\n      this.rubberband.undo();\n    } else{\n      // TODO: see when this is useful\n      // const { width, height } = this.rubberband.getBoundingClientRect();\n\n      // const minWidth = this.config.minSelectionWidth || 4;\n      // const minHeight = this.config.minSelectionHeight || 4;\n      \n      if (this.rubberband.points.length == 2) {\n        this.rubberband.addPoint([ x, y ]); \n        // check if both coordinates are same\n        if (this.rubberband.points[0] == this.rubberband.points[2] && this.rubberband.points[1] == this.rubberband.points[3]) {\n          this.emit('cancel');\n          this.stop();\n        }\n        else{\n          this._isDrawing = false;\n          const shape = this.rubberband.element;\n          shape.annotation = this.rubberband.toSelection();\n          this.emit('complete', shape);\n          this.stop();\n        }\n      }\n    }\n  }\n  \n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation => \n    new EditableLine(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandLineTool.identifier = 'line';\n\nRubberbandLineTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<line/g);\n}","import PointcrossTool from './pointcross/PointcrossTool';\nimport PointTool from './point/PointTool';\nimport RubberbandCircleTool from './circle/RubberbandCircleTool';\nimport RubberbandEllipseTool from './ellipse/RubberbandEllipseTool';\nimport RubberbandFreehandTool from './freehand/RubberbandFreehandTool';\nimport RubberbandMultipolygonTool from './multipolygon/RubberbandMultipolygonTool';\nimport RubberbandLineTool from './line/RubberbandLineTool';\n\nconst ALL_TOOLS = new Set([\n  'point',\n  'pointcross',\n  'circle',\n  'ellipse',\n  'freehand',\n  'line',\n  // 'multipolygon' // exclude from defaults for now\n]);\n\nconst SelectorPack = (anno, config) => {\n\n  // Add configured tools, or all\n  const tools = config?.tools ? \n    config.tools.map(t => t.toLowerCase()) : ALL_TOOLS;\n\n  tools.forEach(tool => {\n    if (tool === 'point')\n      anno.addDrawingTool(PointTool);\n\n    if (tool === 'pointcross')\n      anno.addDrawingTool(PointcrossTool);\n\n    if (tool === 'circle')\n      anno.addDrawingTool(RubberbandCircleTool);\n\n    if (tool === 'ellipse')\n      anno.addDrawingTool(RubberbandEllipseTool);\n  \n    if (tool === 'freehand')\n      anno.addDrawingTool(RubberbandFreehandTool);\n\n    if (tool === 'multipolygon')\n      anno.addDrawingTool(RubberbandMultipolygonTool);\n\n    if (tool === 'line')\n      anno.addDrawingTool(RubberbandLineTool);\n  });\n\n}\n\nexport default SelectorPack;\n"],"names":["root","factory","exports","module","define","amd","self","_typeof","o","Symbol","iterator","constructor","prototype","equal","a","b","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","toString","hasOwnProperty","call","key","E","on","name","callback","ctx","e","this","push","fn","once","listener","off","apply","arguments","_","emit","data","slice","evtArr","len","evts","liveEvents","TinyEmitter","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","defineProperty","enumerable","get","obj","prop","getRandomValues","SVG_NAMESPACE","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","byteToHex","substr","arr","offset","uuid","toLowerCase","REGEX","test","validate","TypeError","options","buf","rnds","random","stringify","WebAnnotation","annotation","opts","_this","_classCallCheck","_defineProperty","opt_props","opt_opts","_objectSpread","underlying","type","target","selector","find","s","value","other","id","equals","_this$opts","readOnly","motivation","body","set","bodies","_this$selector","exact","_this$selector2","start","_this$selector3","end","_WebAnnotation","args","stub","concat","Selection","cloned","JSON","parse","assign","IMPLEMENTATION_MISSING","isTouch","window","navigator","maxTouchPoints","msMaxTouchPoints","ToolLike","_EventEmitter","g","config","env","_callSuper","ResizeObserver","resizeObserver","svgBounds","svg","getBoundingClientRect","_this$svg$viewBox$bas","viewBox","baseVal","width","height","scale","Math","max","onScaleChanged","observe","parentNode","evt","pt","createSVGPoint","bbox","x","clientX","y","clientY","_this$svg$getBounding","left","top","matrixTransform","getScreenCTM","inverse","offsetX","offsetY","getCTM","containerGroup","document","createElementNS","setAttribute","group","drawCircle","r","c","radius","handleRadius","inner","outer","appendChild","handle","querySelector","parseFloat","getAttribute","closest","image","Element","HTMLDocument","enableResponsive","_inherits","_createClass","disconnect","EventEmitter","Tool","_ToolLike2","_this2","_ref","mouseMove","mouseUp","dblClick","_this2$getSVGPoint","getSVGPoint","started","addEventListener","button","_this2$getSVGPoint2","_this2$getSVGPoint3","removeEventListener","startOnSingleClick","_this2$getSVGPoint4","_this2$env$image","naturalWidth","naturalHeight","startX","startY","startDrawing","formatters","supports","EditableShape","_ToolLike","sanitize","doc","cleanEl","el","from","attributes","forEach","attr","startsWith","removeAttribute","scripts","getElementsByTagName","reverse","removeChild","querySelectorAll","svgFragmentToShape","originalDoc","namespaced","parser","DOMParser","parseFromString","isPrefixDeclared","lookupPrefix","isDefaultNamespaceSVG","lookupNamespaceURI","firstChild","XMLSerializer","serializeToString","documentElement","replace","drawEmbeddedSVG","shape","cloneNode","toSVGTarget","serialized","outerHTML","src","isFirefox","userAgent","formatSvgEl","svgEl","w","h","format","reduce","merged","String","className","nodeType","Node","ELEMENT_NODE","elements","_toConsumableArray","style","element","classNames","Set","split","getClassNames","add","join","addClass","formatterEl","_shape$getBBox","getBBox","append","appendFormatterEl","setFormatterElSize","getPoint","console","log","match","EditablePointcross","_EditableShape","point","pointX","pointY","str","_outer$getBBox","elementGroup","grabbedElem","pos","grabbedAt","constrain","coord","delta","_getBBox","_this$env$image","dx","dy","updatedPoint","setPoint","_get","_getPrototypeOf","onMouseMove","onMouseUp","formatter","onGrab","_getBBox2","PointcrossSelection","anchor","display","xy","pointcross","renderedVia","PointcrossTool","_Tool","pointcrossSelection","toSelection","identifier","toUpperCase","includes","parseRectFragment","conformsTo","substring","indexOf","_coords$split$map2","_slicedToArray","map","toFragment","fragmentUnit","px","py","pw","ph","toPercentRectFragment","toPixelRectFragment","toRectFragment","EditablePoint","scaleHandle","isGrabbed","_this$getSVGPoint","setHandleXY","_parseRectFragment","_parseRectFragment2","container","drawHandle","PointTool","_evt$target$closest","_annotation$target$re","isPoint","setXYR","setCircleSize","cx","cy","innerCircle","outerCircle","getCircleSize","CircleMask","imageDimensions","circle","_getCircleSize","tx","ty","mask","_getCircleSize2","RubberbandCircle","anchorX","anchorY","oppositeX","oppositeY","pow","redraw","Mask","pointerEvents","EditableCircle","_this$handles","handles","topleft","topright","bottomright","bottomleft","draggedHandleIdx","anchorHandle","mousePos","getHandleXY","mouseX","mouseY","abs","idx0","idx2","idx3","idx1","setSize","handleIdx","oppositeHandle","stretchCorners","_getCircleSize3","t","_t","RubberbandCircleTool","attachListeners","rubberband","destroy","dragTo","detachListeners","_this$rubberband$getB","minWidth","minSelectionWidth","minHeight","minSelectionHeight","stop","_selector$value","rx","ry","setEllipseSize","innerEllipse","outerEllipse","getEllipseSize","EllipseMask","ellipse","_getEllipseSize","_getEllipseSize2","RubberbandEllipse","drawEllipse","EditableEllipse","leftHandle","anchorLeft","_getEllipseSize3","RubberbandEllipseTool","RubberbandFreehand","points","addPoint","setPoints","freehand","getPoints","pointList","trim","EditableFreehand","round","num","updatedPoints","RubberbandFreehandTool","_isDrawing","onDblClick","PolygonMask","polygon","RubberbandMultipolygon","_step","_iterator","_createForOfIteratorHelper","done","ps","attr2","_step2","_iterator2","p","err","f","head","headRest","lastCorner","pop","multipolygon","pointArray","getPointsFromPathValue","nodeValue","results","allcoords","result","index","coords","toFixed","EditableMultipolygon","_step3","_iterator3","_step4","first","_iterator4","_step5","_iterator5","_i","_updatedPoints","idx","_step6","pointListIDX","found","_iterator6","_step7","updatedPointsIDX","_iterator7","_loop","newPoints","_step8","_iterator8","svgFragmentToPoints","_step9","_iterator9","RubberbandMultipolygonTool","undo","newPart","altKey","ctrlKey","LineMask","line","RubberbandLine","mousepos","Line","innerElement","x1","y1","x2","y2","EditableLine","_xy$split$map2","RubberbandLineTool","ALL_TOOLS","anno","tools","tool","addDrawingTool"],"sourceRoot":""}